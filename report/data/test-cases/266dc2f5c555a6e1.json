{"uid":"266dc2f5c555a6e1","name":"商品复盘进入主播复盘","fullName":"testcase.test_alivia_blankMe.TestAliviaBlankMeShangPin#test_blankme_shangpin_login07","historyId":"baf39b175103896d4479622eac9fbc40","time":{"start":1663981001091,"stop":1663981049422,"duration":48331},"status":"broken","statusMessage":"playwright._impl._api_types.TimeoutError: Timeout 30000.0ms exceeded while waiting for event \"popup\"\n=========================== logs ===========================\nwaiting for event \"popup\"\n============================================================","statusTrace":"self = <testcase.test_alivia_blankMe.TestAliviaBlankMeShangPin object at 0x10f2f74c0>\nbrowser = <Browser type=<BrowserType name=chromium executable_path=/Users/edy/Library/Caches/ms-playwright/chromium-1012/chrome-mac/Chromium.app/Contents/MacOS/Chromium> version=104.0.5112.20>\nlogin_hyx = None\n\n    @allure.title(\"商品复盘进入主播复盘\")\n    @allure.severity(\"critical\")\n    def test_blankme_shangpin_login07(self, browser: Browser, login_hyx):\n        context = browser.new_context(storage_state=\"./data/blankMe_cookie_hyx.json\")\n        page = context.new_page()\n        page.goto(f'https://blankme.{env_util.env}.meetwhale.com/vap/live-analysis-list')\n        page.wait_for_timeout(3000)\n        page.click('.ant-table-tbody >> //tr[2]')\n        page.wait_for_timeout(3000)\n        with page.expect_popup() as popup_info:\n>           page.click('.anchorList--2uHBA > div > .ant-badge > .ant-avatar > img')\n\ntestcase/test_alivia_blankMe.py:171: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Page url='https://blankme.stage.meetwhale.com/vap/live-analysis-detail/444'>\nselector = '.anchorList--2uHBA > div > .ant-badge > .ant-avatar > img'\n\n    def click(\n        self,\n        selector: str,\n        *,\n        modifiers: typing.Optional[\n            typing.List[Literal[\"Alt\", \"Control\", \"Meta\", \"Shift\"]]\n        ] = None,\n        position: Position = None,\n        delay: float = None,\n        button: Literal[\"left\", \"middle\", \"right\"] = None,\n        click_count: int = None,\n        timeout: float = None,\n        force: bool = None,\n        no_wait_after: bool = None,\n        trial: bool = None,\n        strict: bool = None\n    ) -> NoneType:\n        \"\"\"Page.click\n    \n        This method clicks an element matching `selector` by performing the following steps:\n        1. Find an element matching `selector`. If there is none, wait until a matching element is attached to the DOM.\n        1. Wait for [actionability](https://playwright.dev/python/docs/actionability) checks on the matched element, unless `force` option is set. If the\n           element is detached during the checks, the whole action is retried.\n        1. Scroll the element into view if needed.\n        1. Use `page.mouse` to click in the center of the element, or the specified `position`.\n        1. Wait for initiated navigations to either succeed or fail, unless `noWaitAfter` option is set.\n    \n        When all steps combined have not finished during the specified `timeout`, this method throws a `TimeoutError`. Passing\n        zero timeout disables this.\n    \n        Shortcut for main frame's `frame.click()`.\n    \n        Parameters\n        ----------\n        selector : str\n            A selector to search for an element. If there are multiple elements satisfying the selector, the first will be used. See\n            [working with selectors](../selectors.md) for more details.\n        modifiers : Union[List[Union[\"Alt\", \"Control\", \"Meta\", \"Shift\"]], NoneType]\n            Modifier keys to press. Ensures that only these modifiers are pressed during the operation, and then restores current\n            modifiers back. If not specified, currently pressed modifiers are used.\n        position : Union[{x: float, y: float}, NoneType]\n            A point to use relative to the top-left corner of element padding box. If not specified, uses some visible point of the\n            element.\n        delay : Union[float, NoneType]\n            Time to wait between `mousedown` and `mouseup` in milliseconds. Defaults to 0.\n        button : Union[\"left\", \"middle\", \"right\", NoneType]\n            Defaults to `left`.\n        click_count : Union[int, NoneType]\n            defaults to 1. See [UIEvent.detail].\n        timeout : Union[float, NoneType]\n            Maximum time in milliseconds, defaults to 30 seconds, pass `0` to disable timeout. The default value can be changed by\n            using the `browser_context.set_default_timeout()` or `page.set_default_timeout()` methods.\n        force : Union[bool, NoneType]\n            Whether to bypass the [actionability](../actionability.md) checks. Defaults to `false`.\n        no_wait_after : Union[bool, NoneType]\n            Actions that initiate navigations are waiting for these navigations to happen and for pages to start loading. You can\n            opt out of waiting via setting this flag. You would only need this option in the exceptional cases such as navigating to\n            inaccessible pages. Defaults to `false`.\n        trial : Union[bool, NoneType]\n            When set, this method only performs the [actionability](../actionability.md) checks and skips the action. Defaults to\n            `false`. Useful to wait until the element is ready for the action without performing it.\n        strict : Union[bool, NoneType]\n            When true, the call requires selector to resolve to a single element. If given selector resolves to more then one\n            element, the call throws an exception.\n        \"\"\"\n    \n        return mapping.from_maybe_impl(\n>           self._sync(\n                self._impl_obj.click(\n                    selector=selector,\n                    modifiers=mapping.to_impl(modifiers),\n                    position=position,\n                    delay=delay,\n                    button=button,\n                    clickCount=click_count,\n                    timeout=timeout,\n                    force=force,\n                    noWaitAfter=no_wait_after,\n                    trial=trial,\n                    strict=strict,\n                )\n            )\n        )\n\n../whale01/venv/lib/python3.10/site-packages/playwright/sync_api/_generated.py:8007: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Page url='https://blankme.stage.meetwhale.com/vap/live-analysis-detail/444'>\ncoro = <coroutine object Page.click at 0x111c31f50>\n\n    def _sync(self, coro: Awaitable) -> Any:\n        __tracebackhide__ = True\n        g_self = greenlet.getcurrent()\n        task = self._loop.create_task(coro)\n        setattr(task, \"__pw_stack__\", inspect.stack())\n        setattr(task, \"__pw_stack_trace__\", traceback.extract_stack())\n    \n        task.add_done_callback(lambda _: g_self.switch())\n        while not task.done():\n            self._dispatcher_fiber.switch()\n        asyncio._set_running_loop(self._loop)\n>       return task.result()\n\n../whale01/venv/lib/python3.10/site-packages/playwright/_impl/_sync_base.py:89: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Page url='https://blankme.stage.meetwhale.com/vap/live-analysis-detail/444'>\nselector = '.anchorList--2uHBA > div > .ant-badge > .ant-avatar > img'\nmodifiers = None, position = None, delay = None, button = None\nclickCount = None, timeout = None, force = None, noWaitAfter = None\ntrial = None, strict = None\n\n    async def click(\n        self,\n        selector: str,\n        modifiers: List[KeyboardModifier] = None,\n        position: Position = None,\n        delay: float = None,\n        button: MouseButton = None,\n        clickCount: int = None,\n        timeout: float = None,\n        force: bool = None,\n        noWaitAfter: bool = None,\n        trial: bool = None,\n        strict: bool = None,\n    ) -> None:\n>       return await self._main_frame.click(**locals_to_params(locals()))\n\n../whale01/venv/lib/python3.10/site-packages/playwright/_impl/_page.py:691: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Frame name= url='https://blankme.stage.meetwhale.com/vap/live-analysis-detail/444'>\nselector = '.anchorList--2uHBA > div > .ant-badge > .ant-avatar > img'\nmodifiers = None, position = None, delay = None, button = None\nclickCount = None, timeout = None, force = None, noWaitAfter = None\nstrict = None, trial = None\n\n    async def click(\n        self,\n        selector: str,\n        modifiers: List[KeyboardModifier] = None,\n        position: Position = None,\n        delay: float = None,\n        button: MouseButton = None,\n        clickCount: int = None,\n        timeout: float = None,\n        force: bool = None,\n        noWaitAfter: bool = None,\n        strict: bool = None,\n        trial: bool = None,\n    ) -> None:\n>       await self._channel.send(\"click\", locals_to_params(locals()))\n\n../whale01/venv/lib/python3.10/site-packages/playwright/_impl/_frame.py:474: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Channel object at 0x11168d6f0>\nmethod = 'click'\nparams = {'selector': '.anchorList--2uHBA > div > .ant-badge > .ant-avatar > img'}\n\n    async def send(self, method: str, params: Dict = None) -> Any:\n>       return await self._connection.wrap_api_call(\n            lambda: self.inner_send(method, params, False)\n        )\n\n../whale01/venv/lib/python3.10/site-packages/playwright/_impl/_connection.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    async def _() -> None:\n        try:\n>           return await result\n\n../whale01/venv/lib/python3.10/site-packages/playwright/_impl/_connection.py:370: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Channel object at 0x11168d6f0>\nmethod = 'click'\nparams = {'selector': '.anchorList--2uHBA > div > .ant-badge > .ant-avatar > img'}\nreturn_as_dict = False\n\n    async def inner_send(\n        self, method: str, params: Optional[Dict], return_as_dict: bool\n    ) -> Any:\n        if params is None:\n            params = {}\n        callback = self._connection._send_message_to_server(self._guid, method, params)\n        if self._connection._error:\n            error = self._connection._error\n            self._connection._error = None\n            raise error\n        done, _ = await asyncio.wait(\n            {\n                self._connection._transport.on_error_future,\n                callback.future,\n            },\n            return_when=asyncio.FIRST_COMPLETED,\n        )\n        if not callback.future.done():\n            callback.future.cancel()\n>       result = next(iter(done)).result()\nE       playwright._impl._api_types.TimeoutError: Timeout 30000ms exceeded.\nE       =========================== logs ===========================\nE       waiting for selector \".anchorList--2uHBA > div > .ant-badge > .ant-avatar > img\"\nE       ============================================================\n\n../whale01/venv/lib/python3.10/site-packages/playwright/_impl/_connection.py:78: TimeoutError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <testcase.test_alivia_blankMe.TestAliviaBlankMeShangPin object at 0x10f2f74c0>\nbrowser = <Browser type=<BrowserType name=chromium executable_path=/Users/edy/Library/Caches/ms-playwright/chromium-1012/chrome-mac/Chromium.app/Contents/MacOS/Chromium> version=104.0.5112.20>\nlogin_hyx = None\n\n    @allure.title(\"商品复盘进入主播复盘\")\n    @allure.severity(\"critical\")\n    def test_blankme_shangpin_login07(self, browser: Browser, login_hyx):\n        context = browser.new_context(storage_state=\"./data/blankMe_cookie_hyx.json\")\n        page = context.new_page()\n        page.goto(f'https://blankme.{env_util.env}.meetwhale.com/vap/live-analysis-list')\n        page.wait_for_timeout(3000)\n        page.click('.ant-table-tbody >> //tr[2]')\n        page.wait_for_timeout(3000)\n>       with page.expect_popup() as popup_info:\n\ntestcase/test_alivia_blankMe.py:170: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../whale01/venv/lib/python3.10/site-packages/playwright/_impl/_sync_base.py:66: in __exit__\n    self._event.value\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._sync_base.EventInfo object at 0x111c45000>\n\n    @property\n    def value(self) -> T:\n        while not self._future.done():\n            self._sync_base._dispatcher_fiber.switch()\n        asyncio._set_running_loop(self._sync_base._loop)\n        exception = self._future.exception()\n        if exception:\n>           raise exception\nE           playwright._impl._api_types.TimeoutError: Timeout 30000.0ms exceeded while waiting for event \"popup\"\nE           =========================== logs ===========================\nE           waiting for event \"popup\"\nE           ============================================================\n\n../whale01/venv/lib/python3.10/site-packages/playwright/_impl/_sync_base.py:46: TimeoutError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1663980949422,"stop":1663980949422,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"browser_type_launch_args","time":{"start":1663980949422,"stop":1663980949422,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"delete_output_dir","time":{"start":1663980949422,"stop":1663980949422,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"playwright","time":{"start":1663980949422,"stop":1663980950132,"duration":710},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"base_url","time":{"start":1663980949422,"stop":1663980949422,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"pytestconfig","time":{"start":1663980949422,"stop":1663980949422,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"browser","time":{"start":1663980950133,"stop":1663980950592,"duration":459},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"browser_type","time":{"start":1663980950133,"stop":1663980950133,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"launch_browser","time":{"start":1663980950133,"stop":1663980950133,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"login_hyx","time":{"start":1663980950592,"stop":1663980973900,"duration":23308},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"login_hyx::0","time":{"start":1663981106978,"stop":1663981106978,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"browser::0","time":{"start":1663981106980,"stop":1663981107248,"duration":268},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"playwright::0","time":{"start":1663981107249,"stop":1663981107266,"duration":17},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"severity","value":"critical"},{"name":"feature","value":"商品复盘模块"},{"name":"parentSuite","value":"testcase"},{"name":"suite","value":"test_alivia_blankMe"},{"name":"subSuite","value":"TestAliviaBlankMeShangPin"},{"name":"host","value":"edydeMacBook-Pro-10.local"},{"name":"thread","value":"1002-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.test_alivia_blankMe"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"browser_name","value":"'chromium'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"266dc2f5c555a6e1.json","parameterValues":["'chromium'"]}